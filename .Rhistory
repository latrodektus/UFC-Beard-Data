library(ggplot2)
library(knitr)
library(QuantPsyc)
library(PerformanceAnalytics)
library(heplots)
library(plyr)
require(gridExtra)
library(lattice)
data = read.csv(file.choose(),  na.strings =".", header=T, sep=",")
VGplayselfall<-lm(Averagefrequencyviolence~ MV1Total + MV2Average + SOIRTOTAL + SGAAverage + HostilityTotal + MATINGMOTIVATIONTotal + Gender + Sexuality + Age + Relationshipstatus + VorNV + Gender*MV1Total + Gender*SOIRtotal + Gender*MV2Average + Gender*HostilityTotal + Gender*MATINGMOTIVATIONTotal + Gender*Sexuality + Gender*Relationshipstatus, data=data)
head()
head(data)
VGplayselfall<-lm(Averagefrequencyviolence~ MV1Total + MV2Average + SOIRTOTAL + SGAAverage + HostilityTotal + MATINGMOTIVATIONTotal + Gender + Sexuality + Age + Relationshipstatus + VorNV + Gender*MV1Total + Gender*SOIRtotal + Gender*MV2Average + Gender*HostilityTotal + Gender*MATINGMOTIVATIONtotal + Gender*Sexuality + Gender*Relationshipstatus, data=data)
VGplayselfall<-lm(Averagefrequencyviolence~ MV1Total + MV2Average + SOIRTOTAL + SGAAverage + HostilityTotal + MATINGMOTIVATIONtotal + Gender + Sexuality + Age + Relationshipstatus + VorNV + Gender*MV1Total + Gender*SOIRtotal + Gender*MV2Average + Gender*HostilityTotal + Gender*MATINGMOTIVATIONtotal + Gender*Sexuality + Gender*Relationshipstatus, data=data)
VGplayselfall<-lm(Averagefrequencyviolence~ MV1Total + MV2Average + SOIRTOTAL + SGAAverage + HostilityTotal + MATINGMOTIVATIONtotal + Gender + Sexuality + Age + Relationshipstatus + VorNV + Gender*MV1Total + Gender*SOIRTOTAL + Gender*MV2Average + Gender*HostilityTotal + Gender*MATINGMOTIVATIONtotal + Gender*Sexuality + Gender*Relationshipstatus, data=data)
cor.test(data$Averagefrequencyviolence,data$SOIRTOTAL)
fit <- lm(MV2Average ~ Averagefrequencyviolence + Gender, data=data)
summary(fit)
cor.test(data$Averagefrequencyviolence,data$SOIRTOTAL)
cor.test(data.fem$Averagefrequencyviolence,data.fem$MV1)
data.fem = subset(data, Gender=="Female")
cor.test(data.fem$Averagefrequencyviolence,data.fem$MV1)
hist(~MV1Total|VorNV*Gender, data=data,
cor.test(data.fem$Averagefrequencyviolence,data.fem$MV1)
type="MV",
xlab="Gender",
cor.test(data.fem$Averagefrequencyviolence,data.fem$MV1)
hist(~MV1Total|VorNV*Gender, data=data,
type="MV",
xlab="Gender",
main="")
ggplot(data, aes(x=VorNV, y=MV2Average, fill=Gender)) +
geom_histogram(binwidth=2, position="dodge") +
xlab("Violent or Non-violent game played") +
ylab("Mate Value Total") +
scale_x_continuous(expand = c(0, 0)) + scale_y_continuous(expand = c(0, 0)) +
theme(axis.line = element_line(colour = "black"),
plot.title = element_text(size=30, face="bold"),
legend.position = "none",
axis.text=element_text(size=18),
axis.title=element_text(size=20,face="bold"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank())
library(ggplot2)
library(knitr)
library(QuantPsyc)
library(PerformanceAnalytics)
library(heplots)
library(plyr)
library(ggplot2)
library(knitr)
library(QuantPsyc)
library(PerformanceAnalytics)
library(heplots)
library(plyr)
require(gridExtra)
data = read.csv(file.choose(),  na.strings =".", header=T, sep=",")
data$Gender2 <- revalue(data$Gender, c("Male"="1", "Female"="2"))
data$Gender2 <- as.numeric(as.character(data$Gender2))
data$VorNV2 <- revalue(data$VorNV, c("V"="1", "NV"="2"))
data$VorNV2 <- as.numeric(as.character(data$VorNV2))
data$Sexuality <- factor(data$Sexuality)
data<-data[-which(data$Removedata == "Yes"), ]
data<-data[-which(data$Gender == "Other"), ]
data = subset(data, Relationshipstatus %in% c("Single", "In an open relationship/casually dating", "In a long-term monogamous relationship eg. married, partnered", "Recently single/divorced/separated"))
MANOVA1<- manova(cbind(MV2Average, SGAAverage, SOIRTOTAL, MATINGMOTIVATIONtotal) ~ VorNV + Age + Selfscore + Gender + Averagefrequencyviolence + VorNV*Age + VorNV*Selfscore + VorNV*Gender + Selfscore*Gender + Age*Selfscore, data=data)
summary(MANOVA1, test="Pillai")
summary.aov(MANOVA1)
a
data = read.csv(file.choose(),  na.strings =".", header=T, sep=",")
data$Gender2 <- revalue(data$Gender, c("Male"="1", "Female"="2"))
data$Gender2 <- as.numeric(as.character(data$Gender2))
```{r}
data$VorNV2 <- revalue(data$VorNV, c("V"="1", "NV"="2"))
data$VorNV2 <- revalue(data$VorNV, c("V"="1", "NV"="2"))
data$VorNV2 <- as.numeric(as.character(data$VorNV2))
data$Gender2 <- as.numeric(as.character(data$Gender2))
data$Sexuality <- factor(data$Sexuality)
data<-data[-which(data$Removedata == "Yes"), ]
MANOVA2<- manova(cbind(Matevalue, SGAAverage, SOIRTotal, MMTotal) ~ VorNV + Age + Selfscore + Gender + Averagefrequencyviolence + VorNV*Age + VorNV*Selfscore + VorNV*Gender + Selfscore*Gender + Age*Selfscore, data=data)
summary(MANOVA2, test="Pillai")
summary.aov(MANOVA2)
STselection <- lm(TotalSTScore ~ MV2Average + SGAAverage + SOIRTotal + Age + Gender + Gender*MV2Average + Gender*SGAAverage + Gender*SOIRTotal, data=data)
anova(STselection)
STmodel <- lm =(TotalSTScore ~ VorNV +Age + Selfscore + Gender + Averagefrequencyviolence, data=data)
STmodel <- lm(TotalSTScore ~ VorNV +Age + Selfscore + Gender + Averagefrequencyviolence, data=data)
anova(STmodel)
STmodel <- lm(TotalSTScore ~ VorNV + Age + Selfscore + Gender + VorNV*Selfscore, data=data)
anova(STmodel)
View(data)
STmodel <- lm(TotalSTScore ~ VorNV + Age + Selfscore + Gender + VorNV*Selfscore, data=subset(data,Gender=="Male")
anova(STmodel)
STmodel <- lm(TotalSTScore ~ VorNV + Age + Selfscore + Gender + VorNV*Selfscore, data=subset(data,Gender=="Male"))
STmodel <- lm(TotalSTScore ~ VorNV + Age + Selfscore + VorNV*Selfscore, data=subset(data,Gender=="Male"))
anova(STmodel)
STmodel <- lm(TotalSTScore ~ VorNV + Age + Selfscore + VorNV*Selfscore, data=subset(data,Gender=="Female"))
anova(STmodel)
plotstscore <- ggplot(data, aes(x = Selfscore, y = TotalSTScore, color = Gender, shape = Gender, linetype = Gender)) +
geom_point(size = 4) +
ylim(0,7.5) +
scale_colour_hue(l=50, guide = FALSE) +
scale_x_continuous(limits=c(0,7.5)) +
theme_bw() + geom_smooth(method=lm,  fullrange=T) +
xlab("Facial Preference for masculinity ") +
ylab("Self Rated Score") +
theme(legend.position="right") +
theme(axis.line = element_line(colour = "black"),
axis.text=element_text(size=18),
axis.title=element_text(size=20,face="bold"),
axis.title.y=element_text(vjust=0.25),
axis.title.x=element_text(vjust=0.25),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank())
plotstscore
STmodel <- lm(TotalSTScore ~ VorNV + Gender + Age + Selfscore + VorNV*Selfscore +Gender*Selfscore, data=(data)
anova(STmodel)
STmodel <- lm(TotalSTScore ~ VorNV + Gender + Age + Selfscore + VorNV*Selfscore +Gender*Selfscore, data=data)
anova(STmodel)
LTmodel <- lm(TotalLTScore ~ VorNV + Gender + Age + Selfscore + VorNV*Selfscore +Gender*Selfscore, data=data)
anova(STmodel)
plotstscore <- ggplot(data, aes(x = Selfscore, y = TotalLTScore, color = Gender, shape = Gender, linetype = Gender)) +
geom_point(size = 4) +
ylim(0,7.5) +
scale_colour_hue(l=50, guide = FALSE) +
scale_x_continuous(limits=c(0,7.5)) +
theme_bw() + geom_smooth(method=lm,  fullrange=T) +
xlab("Facial Preference for masculinity ") +
ylab("Self Rated Score") +
theme(legend.position="right") +
theme(axis.line = element_line(colour = "black"),
axis.text=element_text(size=18),
axis.title=element_text(size=20,face="bold"),
axis.title.y=element_text(vjust=0.25),
axis.title.x=element_text(vjust=0.25),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank())
plotstscore
anova(LTmodel)
plotltscore <- ggplot(data, aes(x = TotalLTScore, y = Age, color = Gender, shape = Gender, linetype = Gender)) +
geom_point(size = 4) +
ylim(18,76) +
scale_colour_hue(l=50, guide = FALSE) +
scale_x_continuous(limits=c(0,7.5)) +
theme_bw() + geom_smooth(method=lm,  fullrange=T) +
xlab("Facial Preference for masculinity ") +
ylab("Age") +
theme(legend.position="right") +
theme(axis.line = element_line(colour = "black"),
axis.text=element_text(size=18),
axis.title=element_text(size=20,face="bold"),
axis.title.y=element_text(vjust=0.25),
axis.title.x=element_text(vjust=0.25),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank())
plotltscore
STmodelmale <- lm(TotalSTScore ~ VorNV + Gender + Age + Selfscore + VorNV*Selfscore +Gender*Selfscore, data=subset(data, Gender="Male")
)
anova(STmodelmale)
STmodelmale <- lm(TotalSTScore ~ VorNV + Age + Selfscore + VorNV*Selfscore, data=subset(data, Gender="Male"))
anova(STmodelmale)
STmodelfemale <- lm(TotalSTScore ~ VorNV + Age + Selfscore + VorNV*Selfscore, data=subset(data, Gender="Female"))
anova(STmodelfemale)
STmodelmale <- lm(TotalSTScore ~ VorNV + Age + Selfscore + VorNV*Selfscore, data=subset(data, Gender=="Male"))
anova(STmodelmale)
STmodelfemale <- lm(TotalSTScore ~ VorNV + Age + Selfscore + VorNV*Selfscore, data=subset(data, Gender=="Female"))
anova(STmodelfemale)
LTmodelmale <- lm(TotalLTScore ~ VorNV + Age + Selfscore + VorNV*Selfscore, data=subset(data, Gender=="Male"))
anova(LTmodelmale)
LTmodelfemale <- lm(TotalLTScore ~ VorNV + Age + Selfscore + VorNV*Selfscore, data=subset(data, Gender=="Female"))
anova(LTmodelfemale)
MANOVA2<- manova(cbind(Matevalue, SGAAverage, SOIRTotal, MMTotal,TotalSTScore) ~ VorNV + Age + Selfscore + Gender + Averagefrequencyviolence + VorNV*Age + VorNV*Selfscore + VorNV*Gender + Selfscore*Gender + Age*Selfscore, data=data)
summary(MANOVA2, test="Pillai")
summary.aov(MANOVA2)
packages <- c('pavo', 'devtools')
install.packages(packages)  # Install them if need be
sapply(packages, function(x) library(x, character.only = TRUE, verbose = FALSE))  # Load them
data = read.table(file.choose(),  na.strings =".", header=T, sep=",")
library(nlme)
library(MASS)
library(lattice)
library(ggplot2)
library(lme4)
library(plyr)
View(data)
data = read.table(file.choose(),  na.strings =".", header=T, sep=",")
data = read.table(file.choose(),  na.strings =".", header=T, sep=",")
View(data)
names(data)
library(nlme)
library(MASS)
library(lattice)
library(ggplot2)
library(lme4)
library(plyr)
lifetime = subset(data, Week==1)
hist(lifetime$DT)
hist(lifetime$DRate)
hist(lifetime$Growth)
hist(lifetime$WtInc)
hist(lifetime$GrowthCont)
hist(lifetime$WtIncCont)
hist(lifetime$Lifespan)
hist(lifetime$Resting)
hist(lifetime$Active)
hist(lifetime$Nymphs)
hist(lifetime$TotalEggs)
data = read.table(file.choose(),  na.strings =".", header=T, sep=",")
names(data)
lifetime = subset(data, Week==1)
hist(lifetime$Resting)
hist(lifetime$Active)
hist(lifetime$Scope)
hist(lifetime$Nymphs)
hist(lifetime$TotalNymphs)
MANOVADEV<- manova(cbind(DRate, Growth, WtInc, Lifespan) ~ treatment + sex + treatment*sex, data=lifetime)
summary(MANOVADEV, test="Pillai")
summary.aov(MAONOVADEV)
summary.aov(MANOVADEV)
BoxVVGgender <- ggplot(lifetime, aes(x=treatment, y=DRate)) + geom_boxplot() +
guides(fill=FALSE) +
xlab("Treatment") +
ylab("Development Rate") +
theme(axis.line = element_line(colour = "black"),
axis.text=element_text(size=18),
axis.title=element_text(size=20,face="bold"),
axis.text.x = element_text(angle = 90, hjust = 1),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank())
BoxVVGgender
BoxGrowth <- ggplot(lifetime, aes(x=treatment, y=Growth)) + geom_boxplot() +
guides(fill=FALSE) +
xlab("Treatment") +
ylab("Growth") +
theme(axis.line = element_line(colour = "black"),
axis.text=element_text(size=18),
axis.title=element_text(size=20,face="bold"),
axis.text.x = element_text(angle = 90, hjust = 1),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank())
BoxGrowth
BoxWtInc <- ggplot(lifetime, aes(x=treatment, y=WtInc)) + geom_boxplot() +
guides(fill=FALSE) +
xlab("Treatment") +
ylab("Weith Increase") +
theme(axis.line = element_line(colour = "black"),
axis.text=element_text(size=18),
axis.title=element_text(size=20,face="bold"),
axis.text.x = element_text(angle = 90, hjust = 1),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank())
BoxWtInc
BoxLifespan <- ggplot(lifetime, aes(x=treatment, y=Lifespan)) + geom_boxplot() +
guides(fill=FALSE) +
xlab("Treatment") +
ylab("Lifespan") +
theme(axis.line = element_line(colour = "black"),
axis.text=element_text(size=18),
axis.title=element_text(size=20,face="bold"),
axis.text.x = element_text(angle = 90, hjust = 1),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank())
BoxLifespan
BoxActive <- ggplot(lifetime, aes(x=treatment, y=Active)) + geom_boxplot() +
guides(fill=FALSE) +
xlab("Treatment") +
ylab("Active Metabolic Rate") +
theme(axis.line = element_line(colour = "black"),
axis.text=element_text(size=18),
axis.title=element_text(size=20,face="bold"),
axis.text.x = element_text(angle = 90, hjust = 1),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank())
BoxActive
BoxResting <- ggplot(lifetime, aes(x=treatment, y=Resting)) + geom_boxplot() +
guides(fill=FALSE) +
xlab("Treatment") +
ylab("Active Metabolic Rate") +
theme(axis.line = element_line(colour = "black"),
axis.text=element_text(size=18),
axis.title=element_text(size=20,face="bold"),
axis.text.x = element_text(angle = 90, hjust = 1),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank())
BoxResting
BoxScope <- ggplot(lifetime, aes(x=treatment, y=Scope)) + geom_boxplot() +
guides(fill=FALSE) +
xlab("Treatment") +
ylab("Active Metabolic Rate") +
theme(axis.line = element_line(colour = "black"),
axis.text=element_text(size=18),
axis.title=element_text(size=20,face="bold"),
axis.text.x = element_text(angle = 90, hjust = 1),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank())
BoxScope
MANOVAMR<- manova(cbind(Active, Resting) ~ treatment + sex + A.weight + treatment*sex, data=lifetime)
summary(MANOVADEV, test="Pillai")
summary(MANOVAMR, test="Pillai")
summary.aov(MANOVAMR)
data$Week2 = I(data$Week)^2
View(data)
ActiveMR = lmer(Active ~ treatment + Week + Week2 + treatment*Week + treatment*week2 + (1 | MaleID), date=data)
ActiveMR = lmer(Active ~ treatment + Week + Week2 + treatment*Week + treatment*week2 + (1 | MaleID), data=data)
ActiveMR = lmer(Active ~ treatment + Week + Week2 + treatment*Week + treatment*Week2 + (1 | MaleID), data=data)
View(data)
ActiveMR = lmer(Active ~ treatment + Week + Week2 + treatment*Week + treatment*Week2 + (1 | ID), data=data)
summary(ActiveMRveMR)
summary(ActiveMR)
anova(ActiveMR)
library(gamm4)
Gamm1 = gamm4(ActiveMR ~ treatment + Sex + s(Week, by = treatment), random = ~ (1 | Cricket.ID),  family=gaussian, data=data)
Gamm1 = gamm4(ActiveMR ~ treatment + sex + s(Week, by = treatment), random = ~ (1 | Cricket.ID),  family=gaussian, data=data)
Gamm1 = gamm4(ActiveMR ~ sex + s(Week, by = treatment), random = ~ (1 | Cricket.ID),  family=gaussian, data=data)
Gamm1 = gamm4(ActiveMR ~ s(Week, by = treatment), random = ~ (1 | ID),  family=gaussian, data=data)
datashort = subset(data, Week %in% c("1", "2", "3", "4", "5", "6"))
ActiveMR = lmer(Active ~ treatment + Week + Week2 + treatment*Week + treatment*Week2 + (1 | ID), data=datashort)
summary(ActiveMR)
anova(ActiveMR)
Gamm1 = gamm4(ActiveMR ~ sex + s(Week, by = treatment), random = ~ (1 | ID),  family=gaussian, data=datashort)
gam1<-gam(ActiveMR~te(Week,by = treatment,bs="tp",fx=T),method="ML")
gam1<-gam(ActiveMR~te(Week,by = treatment,bs="tp",fx=T),method="ML", data=datashort)
maleCE<-lme(Active ~ treatment + Week + Week2, (~1 | ID), data=Data.males ,control=list(maxIter=1000,msMaxIter=1000, niterEM=1000))
maleCE<-lme(Active ~ treatment + Week + Week2, (~1 | ID), data=data ,control=list(maxIter=1000,msMaxIter=1000, niterEM=1000))
anova(ActiveMR,type="marginal",adjustSigma=F)
datamales = subset(data, sex=="M")
datafem = subset(data, sex=="F")
ActiveMR = lmer(Nymphs ~ treatment + Week + Week2 + treatment*Week + treatment*Week2 + (1 | ID), data=datafem)
summary(ActiveMR)
anova(ActiveMR,type="marginal",adjustSigma=F)
library(car)
ActiveMR = lmer(Nymphs ~ treatment + Week + Week2 + treatment*Week + treatment*Week2 + (1 | ID), data=datafem)
summary(ActiveMR)
anova(ActiveMR,type="marginal",adjustSigma=F)
anova((ActiveMR, type=c("II","III", 2, 3), vcov.=vcov(mod), singular.ok, ...))
anova((ActiveMR, type=c("II","III", 2, 3), vcov.=vcov(ActiveMR), singular.ok, ...))
anova((ActiveMR, type=c(2), vcov.=vcov(ActiveMR), ...))
anova((ActiveMR, type=c(3))
anova((ActiveMR type=c(3))
anova((ActiveMR, type=c(3), vcov.=vcov(ActiveMR), ...))
anova((ActiveMR, type=c(3), vcov.=vcov(ActiveMR)))
anova(ActiveMR,type="marginal",adjustSigma=F)
ActiveMR = lmer(Nymphs ~ treatment + Week + Week2 + treatment*Week + treatment*Week2 + (1 | ID), data=datafem)
anova(ActiveMR,type="marginal",adjustSigma=F)
library(ggplot2)
library(knitr)
library(QuantPsyc)
library(PerformanceAnalytics)
library(heplots)
library(plyr)
require(gridExtra)
data = read.csv(file.choose(),  na.strings =".", header=T, sep=",")
View(data)
data$Gender2 <- revalue(data$Gender, c("Male"="1", "Female"="2"))
data$Gender2 <- as.numeric(as.character(data$Gender2))
data$VorNV2 <- revalue(data$VorNV, c("V"="1", "NV"="2"))
data$VorNV2 <- as.numeric(as.character(data$VorNV2))
data$Sexuality <- factor(data$Sexuality)
data<-data[-which(data$Removedata == "Yes"), ]
data<-data[-which(data$Gender == "Other"), ]
data = subset(data, Relationshipstatus %in% c("Single", "In an open relationship/casually dating", "In a long-term monogamous relationship eg. married, partnered", "Recently single/divorced/separated"))
ddply(my.df, c("Score", "Numericalgameplayed"), transform, x.std = scale(x))
ddply(data, c("Score", "Numericalgameplayed"), transform, x.std = scale(x))
ddply(data, c("Numericalgameplayed"), transform, x.std = scale(Score))
View(data)
hist(data$Score)
hist(data$MV1Total)
data = read.csv(file.choose(),  na.strings =".", header=T, sep=",")
data$Gender2 <- revalue(data$Gender, c("Male"="1", "Female"="2"))
data$Gender2 <- as.numeric(as.character(data$Gender2))
data$VorNV2 <- revalue(data$VorNV, c("V"="1", "NV"="2"))
data$VorNV2 <- as.numeric(as.character(data$VorNV2))
data$Sexuality <- factor(data$Sexuality)
data<-data[-which(data$Removedata == "Yes"), ]
data<-data[-which(data$Gender == "Other"), ]
data = subset(data, Relationshipstatus %in% c("Single", "In an open relationship/casually dating", "In a long-term monogamous relationship eg. married, partnered", "Recently single/divorced/separated"))
hist(data$Score)
hist(ddply(data, c("Numericalgameplayed"), transform, x.std = scale(Score)))
data$Score2 <- ddply(data, c("Numericalgameplayed"), transform, x.std = scale(Score))
hist(data$Score2)
hist(data$x.std)
ddply(data, c("Numericalgameplayed"), transform, x.std = scale(Score))
ddply(data, c("Numericalgameplayed"), transform, x.std = scale(Score))
ddply(data, c("Numericalgameplayed"), transform, Score.std = scale(Score))
Numericalgameplayed
hist(data$Numericalgameplayed)
within(data, Score.std <- ave(Score, Numericalgameplayed, FUN=stdz))
data$Score.std <- ave(data$Score, data$Numericalgameplayed, Fun=scale)
View(data)
?apply
data$Score.std <- apply(data, 2, tapply, data$Numericalgameplayed, scale)
apply(data, 2, tapply, data$Numericalgameplayed, scale)
?tapply
ddply(data, c("Numericalgameplayed"), transform, Score.std = scale(Score))
ddply(data, c("Gender", "Numericalgameplayed"), transform, Score.std = scale(Score))
ddply(data, c("Gender"), transform, Score.std = scale(Score))
tapply(data$Score, list(data$Numericalgameplayed), scale)
data$Score.std <- tapply(data$Score, list(data$Numericalgameplayed), scale)
df %>%
group_by(Numericalgameplayed) %>%
mutate(Score = normalit(Score))
data %>%
group_by(Numericalgameplayed) %>%
mutate(Score = normalit(Score))
ddply(data, "Numericalgameplayed", transform, Score.std = scale(Score))
ddply(data, Numericalgameplayed, transform, Score.std = scale(Score))
ddply(data, Numericalgameplayed, transform, Score.std = scale(Score))
data$Numericalgameplayed <- factor(data$Numericalgameplayed)
ddply(data, "Numericalgameplayed"", transform, Score.std = scale(Score))
)
ddply(data, "Numericalgameplayed", transform, Score.std = scale(Score))
winner = read.table(file.choose(),  na.strings =".", header=T, sep=",")
View(data)
library(BradleyTerry2)
library(dplyr)
library(knitr)
library(ggplot2)
source("functions_for_prepping_bt_analysis.R")
setwd("~/1 - Research/2 - UFC Beard Data")
source("functions_for_prepping_bt_analysis.R")
winner<-read.csv("UFC_winner.csv",as.is=T)
loser<-read.csv("UFC_loser.csv",as.is=T)
predictors<-read.csv("UFC_predictors.csv",as.is=T)
winner<-winner[c(-18,-157),]
loser<-loser[c(-18,-157),]
predictors<-predictors[c(-6,-162),]
predictors$stance[predictors$stance==""]<-"other"
predictors$stance[predictors$stance=="Open Stance "]<-"other"
predictors$stance[predictors$stance=="Switch "]<-"other"
names(predictors)[1]<-"ID"
predictors<-arrange(predictors,ID)
row.names(predictors)<-predictors$ID
names(winner)[1]<-"ID"
names(loser)[1]<-"ID"
all<-rbind(winner,loser)
all$winning<-c(rep("yes",length(winner$ID)),rep("no",length(winner$ID)))
all$ID<-as.factor(all$ID)
winner2<-filter(all,winning=="yes")
loser2<-filter(all,winning=="no")
beards<-list(winner=winner2,loser=loser2,predictors=predictors)
model1<-BTm(player1=winner,player2=loser,
formula = ~ prev + facehair + ht[ID] + reach[ID] +
(1|ID), id="ID",data=beards)
summary(model1)
model1<-BTm(player1=winner,player2=loser,
formula = ~ prev + facehair + ht[ID] + reach[ID] + stance[ID] +
(1|ID), id="ID",data=beards)
summary(model1)
model2<-BTm(player1=winner,player2=loser,
formula = ~ prev + as.factor(facehair)  + ht[ID] + reach[ID] + stance[ID] +
(1|ID), id="ID",data=beards)
summary(model2)
View(loser)
table(loser$method)
table(loser$stance)
table(predictor$stance)
table(predictors$stance)
View(loser)
View(loser)
View(winner)
View(predictors)
View(winner)
View(loser)
View(predictors)
w1<-filter(winner,method>=3)
l1<-filter(loser,method>=3)
p1<-subset(predictors,predictors$ID%in%w1$ID)
b.out<-set_up_btm(p1,w1,l1)
model.other.outcomes<-BTm(player1=winner,player2=loser,
formula = ~  facehair  + reach[ID] +
(1|ID), id="ID",data=b.out)
summary(model.other.outcomes)
model.other.outcomes<-BTm(player1=winner,player2=loser,
formula = ~  as.factor(facehair)  + reach[ID] +
(1|ID), id="ID",data=b.out)
summary(model.other.outcomes)
w1<-filter(winner,method<=2)
l1<-filter(loser,method<=2)
p1<-subset(predictors,predictors$ID%in%w1$ID)
b.out<-set_up_btm(p1,w1,l1)
model3<-BTm(player1=winner,player2=loser,
formula = ~  as.factor(facehair)  + reach[ID] +
(1|ID), id="ID",data=b.out)
summary(model3)
model1<-BTm(player1=winner,player2=loser,
formula = ~ prev + facehair + ht[ID] + reach[ID] + stance[ID] +
(1|ID), id="ID",data=beards)
summary(model1)
model1<-BTm(player1=winner,player2=loser,
formula = ~ prev + facehair + ht[ID] + reach[ID] + as.numeric(stance[ID]) +
(1|ID), id="ID",data=beards)
